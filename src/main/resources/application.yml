spring:
  application:
    name: user-auth-service

  datasource:
    url: jdbc:postgresql://postgres:5432/hyppsdb
    username: postgres
    password: hypps@12345
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update  #validate  # Production safe (use 'update' only in dev)
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    jdbc:
      batch_size: 25
      order_inserts: true
      order_updates: true

  # Transaction Configuration
  transaction:
    default-timeout: 30  # 30 seconds timeout for all transactions
    rollback-on-commit-failure: true

    hikari:
      maximum-pool-size: 20          # Max connections in pool
      minimum-idle: 5                # Min idle connections
      connection-timeout: 20000      # 20 seconds to get connection
      idle-timeout: 300000           # 5 minutes idle timeout
      max-lifetime: 1800000          # 30 minutes max connection lifetime
      leak-detection-threshold: 60000 # 60 seconds leak detection
      pool-name: "HikariPool-Auth"

  kafka:
    bootstrap-servers: kafka:9092

    consumer:
      group-id: auth-service-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'

    producer:
      acks: 1
      retries: 3
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  redis:
    host: redis
    port: 6379
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0

  #  spring:
  #    redis:
  #      cluster:
  #        nodes:
  #          - redis-node1.example.com:6379
  #          - redis-node2.example.com:6379
  #          - redis-node3.example.com:6379
  #      timeout: 6000ms
  #      lettuce:
  #        pool:
  #          max-active: 20
  #          max-idle: 10
  #          min-idle: 5

  mail:
    host: smtp.gmail.com
    port: 587
    username: hypps007@gmail.com
    password: qciswnglptlzwqnl
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

resilience4j:
  circuitbreaker:
    instances:
      authService:
        register-health-indicator: true
        ring-buffer-size-in-closed-state: 10     # smaller buffer for quick testing
        ring-buffer-size-in-half-open-state: 5   # fewer calls to decide close/open
        wait-duration-in-open-state: 5s          # only wait 5s before retrying
        failure-rate-threshold: 50               # 50% failures trips breaker
        slow-call-duration-threshold: 1s         # faster timeout detection
        slow-call-rate-threshold: 50
        permitted-number-of-calls-in-half-open-state: 3

  retry:
    instances:
      authService:
        max-attempts: 2                          # retry less to save time in dev
        wait-duration: 500ms                     # retry faster
        exponential-backoff-multiplier: 1.5      # mild backoff

server:
  port: 8080
  servlet:
    context-path: /
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    tags-sorter: alpha
    operations-sorter: alpha
    display-request-duration: true
    show-extensions: true
    show-common-extensions: true
    default-model-expand-depth: 3
    default-models-expand-depth: 3
  show-actuator: false
  group-configs:
    - group: 'authentication-api'
      paths-to-match: '/api/auth/**'
    - group: 'User Management API'
      paths-to-match: '/api/user/**'

logging:
  level:
    com.HYYPS.HYYPS_Backend: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.springframework.mail: DEBUG
    io.swagger: INFO
    springdoc: INFO
    # Add these for transaction debugging
    org.springframework.transaction: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

app:
  name: "HYYPS Learning Platform"
  jwt:
    secret: "mySecretKeyForJWTTokenGenerationThatShouldBeAtLeast256BitsLong"
    expiration: 86400000 # 24 hours in milliseconds

  kafka:
    topics:
      signup-otp: signup-otp-requests
      otp-retry: signup-otp-retry
      otp-result: signup-otp-result

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
      show-components: always
  health:
    circuitbreakers:
      enabled: true
    redis:
      enabled: true
    db:
      enabled: true

aws:
  s3:
    access-key: YOUR_AWS_ACCESS_KEY
    secret-key: YOUR_AWS_SECRET_KEY
    region: us-east-1
    bucket-name: hyyps-file-storage
    base-url: https://hyyps-file-storage.s3.amazonaws.com

sql:
  init:
    mode: always